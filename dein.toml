[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build =  'make'

[[plugins]]
repo =  'roxma/nvim-yarp'
on_if = '!has("nvim")'

[[plugins]]
repo =  'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo =  'deton/jasegment.vim'
hook_add = '''
"{{{
let g:jasegment#model='knbc_bunsetu'

let g:jasegment#highlight = 1
"ハイライトを削除

"~\.cache\dein\repos\github.com\deton\jasegment.vim\autoload\jasegment.vim に以下の関数を追加
"function! jasegment#deletemark() abort
"  silent! call matchdelete(s:hl_id)
"endfunction

function! Myjasegdel() abort
if exists('*jasegment#deletemark')
    call jasegment#deletemark()
endif
endfunction
autocmd vimrc InsertEnter,BufEnter * call Myjasegdel()

let g:jasegment_no_default_key_mappings = 1
nmap <silent> e <Plug>JaSegmentMoveNE
nmap <silent> w <Plug>JaSegmentMoveNW
nmap <silent> b <Plug>JaSegmentMoveNB
omap <silent> e <Plug>JaSegmentMoveOE
omap <silent> w <Plug>JaSegmentMoveOW
omap <silent> b <Plug>JaSegmentMoveOB
xmap <silent> e <Plug>JaSegmentMoveVE
xmap <silent> w <Plug>JaSegmentMoveVW
xmap <silent> b <Plug>JaSegmentMoveVB

nnoremap W w
onoremap W w
xnoremap W w
nnoremap B b
onoremap B b
xnoremap B b
nnoremap E e
onoremap E e
xnoremap E e

omap <silent> aW <Plug>JaSegmentTextObjA
omap <silent> iW <Plug>JaSegmentTextObjI
xmap <silent> aW <Plug>JaSegmentTextObjVA
xmap <silent> iW <Plug>JaSegmentTextObjVI
"}}}
'''

#[[plugins]]
#repo =  'kshenoy/vim-signature'
#hook_add = '''
#let g:SignatureMap = {
#    \ 'Leader'             :  "M",
#    \ 'PlaceNextMark'      :  "M,",
#    \ 'ToggleMarkAtLine'   :  "M.",
#    \ 'PurgeMarksAtLine'   :  "M-",
#    \ 'DeleteMark'         :  "dM",
#    \ 'PurgeMarks'         :  "M<Space>",
#    \ 'PurgeMarkers'       :  "M<BS>",
#    \ 'GotoNextLineAlpha'  :  "']",
#    \ 'GotoPrevLineAlpha'  :  "'[",
#    \ 'GotoNextSpotAlpha'  :  "`]",
#    \ 'GotoPrevSpotAlpha'  :  "`[",
#    \ 'GotoNextLineByPos'  :  "]'",
#    \ 'GotoPrevLineByPos'  :  "['",
#    \ 'GotoNextSpotByPos'  :  "]`",
#    \ 'GotoPrevSpotByPos'  :  "[`",
#    \ 'GotoNextMarker'     :  "]-",
#    \ 'GotoPrevMarker'     :  "[-",
#    \ 'GotoNextMarkerAny'  :  "]=",
#    \ 'GotoPrevMarkerAny'  :  "[=",
#    \ 'ListBufferMarks'    :  "M/",
#    \ 'ListBufferMarkers'  :  "M?"
#\ }
#
#'''

[[plugins]]
repo =  'Shougo/neomru.vim'
hook_add ='''
"denite-neomruでginaを無視
let g:neomru#do_validate = 0
let g:neomru#file_mru_ignore_pattern = ['gina://','term://']
let g:neomru#time_format = '%Y/%m/%d %H:%M:%S'
let g:neomru#file_mru_limit = 100
let g:neomru#file_mru_path= '~/.cache/neomru/file'
'''

[[plugins]]
repo =  'basyura/twibill.vim'

[[plugins]]
repo =  'mattn/webapi-vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo =  'itchyny/lightline.vim'

[[plugins]]
repo =  'mengelbrecht/lightline-bufferline'
depends = ['lightline.vim']

[[plugins]]
repo =  'itchyny/vim-gitbranch'
depends = ['lightline.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo =  'w0ng/vim-hybrid'

[[plugins]]
repo ='ayu-theme/ayu-vim'

[[plugins]]
repo = 'yarisgutierrez/ayu-lightline'
depends = ['lightline.vim']

[[plugins]]
repo =  'morhetz/gruvbox'
hook_add = '''
let g:gruvbox_contrast_dark = 'medium'
let g:gruvbox_italicize_comments = 0
let g:gruvbox_invert_selection = 0
let g:gruvbox_guisp_fallback = 'bg'
'''
[[plugins]]
repo = 'markonm/traces.vim'
hook_add ='''
let g:traces_num_range_preview = 1
nnoremap S :%s/
'''

[[plugins]]
repo = 'Shougo/neco-syntax'
hook_add = '''
'''

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'
on_source = ['deoplete','neocomplete']

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'haya14busa/is.vim'
hook_add = '''
let g:is#do_default_mapping = 0
'''

[[plugins]]
repo = 'orokasan/clever-f.vim'
hook_add = '''
let g:clever_f_mark_cursor = 0
let g:clever_f_mark_char_color = "Underlined"
let g:clever_f_hide_cursor_on_cmdline = 0
let g:clever_f_smart_case = 1
let g:clever_f_across_no_line = 1
let g:clever_f_chars_match_any_signs = ':;'
let g:clever_f_use_migemo = 1
'''

[[plugins]]
repo = 'rhysd/vim-color-spring-night'
hook_add = '''
let g:spring_night_kill_bold = 1
let g:spring_night_kill_italic = 1
let g:spring_night_high_contrast = 0
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
let g:incsearch#auto_nohlsearch = 1
'''

[[plugins]]
repo = 'haya14busa/incsearch-migemo.vim'
hook_add = '''
map m/ <Plug>(incsearch-migemo-/)
map m? <Plug>(incsearch-migemo-?)
map mg/ <Plug>(incsearch-migemo-stay)
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
on_map = {nx = '<Plug>'}
hook_add = '''
"nnoremap <silent><expr> <Plug>(anzu-n-zzzv) anzu#mode#mapexpr("n", "", "zzzv")
"nnoremap <silent><expr> <Plug>(anzu-N-zzzv) anzu#mode#mapexpr("N", "", "zzzv")
"nmap n <Plug>(is-nohl)<Plug>(anzu-n-zzzv)
"nmap N <Plug>(is-nohl)<Plug>(anzu-N-zzzv)
	nmap n <Plug>(is-nohl)<Plug>(anzu-n)
	nmap N <Plug>(is-nohl)<Plug>(anzu-N)
	nmap * <Plug>(is-nohl)<Plug>(anzu-star)
	nmap # <Plug>(is-nohl)<Plug>(anzu-sharp)
let g:airline#extensions#anzu#enabled = 0
'''

[[plugins]]
repo = 'sainnhe/vim-color-forest-night'

[[plugins]]
repo = 'moznion/hateblo.vim'
depends = 'webapi.vim'

[[plugins]]
repo =  'iyuuya/denite-ale'
on_source = ['denite.nvim']

[[plugins]]
repo =  'kana/vim-operator-user'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'

[[plugins]]
repo =  'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'orokasan/denite-anzu'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo =  'kmnk/denite-dirmark'
on_source = ['denite.nvim','defx.nvim']

[[plugins]]
repo = 'skanehira/translate.vim'
#[[plugins]]
#repo = 'kana/vim-smartinput'
#lazy = '1'
#hook_add = '''
#'''
[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'fuenor/JpFormat.vim'

#[[plugins]]
#repo = 'SidOfc/mkdx'
#on_ft = ['markdown','md']
#hook_source = '''
#" :h mkdx-settings
#let g:mkdx#settings = {
#      \ 'image_extension_pattern': 'a\?png\|jpe\?g\|gif',
#      \ 'restore_visual':          1,
#      \ 'enter':                   { 'enable': 1, 'malformed': 1, 'o': 1,
#      \                              'shifto': 1, 'shift': 0 },
#      \ 'map':                     { 'prefix': '<leader>', 'enable': 1 },
#      \ 'tokens':                  { 'enter': ['-', '*', '>'],
#      \                              'bold': '**', 'italic': '*', 'strike': '',
#      \                              'list': '-', 'fence': '',
#      \                              'header': '#' },
#      \ 'checkbox':                { 'toggles': [' ', '-', 'x'],
#      \                              'update_tree': 2,
#      \                              'initial_state': ' ' },
#      \ 'toc':                     { 'text': "Table of Contents", 'list_token': '-',
#      \                              'update_on_write': 1,
#      \                              'position': 0,
#      \                              'details': {
#      \                                 'enable': 0,
#      \                                 'summary': 'Click to expand {{toc.text}}',
#      \                                 'nesting_level': -1,
#      \                                 'child_count': 5,
#      \                                 'child_summary': 'show {{count}} items'
#      \                              }
#      \                            },
#      \ 'table':                   { 'divider': '|',
#      \                              'header_divider': '-',
#      \                              'align': {
#      \                                 'left':    [],
#      \                                 'center':  [],
#      \                                 'right':   [],
#      \                                 'default': 'center'
#      \                              }
#      \                            },
#      \ 'links':                   { 'external': {
#      \                                 'enable': 1, 'timeout': 3, 'host': '', 'relative': 1
#      \                              },
#      \                              'fragment': {
#      \                                 'jumplist': 1,
#      \                                 'complete': 1
#      \                              }
#      \                            },
#      \ 'highlight':               { 'enable': 1 },
#      \ 'auto_update':             { 'enable': 0 },
#      \ 'fold': { 'enable': 1 }
#    \ }
#'''

[[plugins]]
repo = 'nixprime/cpsm'

# vim:set foldmethod=marker:
