[[plugins]]
repo = 'Shougo/dein.vim'

# [[plugins]]
# repo = 'sheerun/vim-polyglot'
# hook_add = '''
# let g:polyglot_disabled = ['markdown', 'tsx', 'typescript', 'csv']
# '''

[[plugins]]
repo =  'roxma/nvim-yarp'
on_if = ''' !has('nvim') '''

[[plugins]]
repo =  'roxma/vim-hug-neovim-rpc'
on_if = ''' !has('nvim') '''

[[plugins]]
repo =  'itchyny/lightline.vim'
depends = ['lightline-bufferline']
hook_add = 'source ~/dotfiles/vim/plugins/config/lightline.rc.vim'

[[plugins]]
repo =  'maximbaz/lightline-ale'
depends = ['lightline.vim']
hook_add = '''
if has('mac')
    let g:lightline#ale#indicator_checking = "\uf110"
    let g:lightline#ale#indicator_warnings = ''
    let g:lightline#ale#indicator_errors = ''
    let g:lightline#ale#indicator_ok = ""
else
    let g:lightline#ale#indicator_checking = "\uf110"
    let g:lightline#ale#indicator_warnings = "\uf48f"
    let g:lightline#ale#indicator_errors = "\uf484"
    let g:lightline#ale#indicator_ok = "\uf43a"
endif

''' # }}}

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'fuenor/JpFormat.vim'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'deton/jasentence.vim'
hook_add = '''
let g:jasentence_endpat = '[、。，．？！]\+'
'''

[[plugins]]
repo = 'tyru/skkdict.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
depends = ['vim-textobj-user']
repo = 'kana/vim-textobj-entire'

[[plugins]]
depends = ['vim-textobj-user']
repo = 'saaguero/vim-textobj-pastedtext'

[[plugins]]
depends = ['vim-textobj-user']
repo = 'rhysd/vim-textobj-anyblock'

[[plugins]]
repo =  'deton/jasegment.vim'
#TODO:qitta
hook_add = ''' "{{{
let g:jasegment#model='knbc_bunsetu'
let g:jasegment#highlight = 0
omap <silent><buffer> aW <Plug>JaSegmentTextObjA
omap <silent><buffer> iW <Plug>JaSegmentTextObjI
xmap <silent><buffer> aW <Plug>JaSegmentTextObjVA
xmap <silent><buffer> iW <Plug>JaSegmentTextObjVI
'''# }}} 

#[[plugins]]
#repo =  'ksh <buffer>enoy/vim-signature' {{{
#hook_add = ' <buffer>''
#let g:SignatureMap = {
#    \ 'Leader'             :  "M",
#    \ 'PlaceNextMark'      :  "M,",
#    \ 'ToggleMarkAtLine'   :  "M.",
#    \ 'PurgeMarksAtLine'   :  "M-",
#    \ 'DeleteMark'         :  "dM",
#    \ 'PurgeMarks'         :  "M<Space>",
#    \ 'PurgeMarkers'       :  "M<BS>",
#    \ 'GotoNextLineAlpha'  :  "']",
#    \ 'GotoPrevLineAlpha'  :  "'[",
#    \ 'GotoNextSpotAlpha'  :  "`]",
#    \ 'GotoPrevSpotAlpha'  :  "`[",
#    \ 'GotoNextLineByPos'  :  "]'",
#    \ 'GotoPrevLineByPos'  :  "['",
#    \ 'GotoNextSpotByPos'  :  "]`",
#    \ 'GotoPrevSpotByPos'  :  "[`",
#    \ 'GotoNextMarker'     :  "]-",
#    \ 'GotoPrevMarker'     :  "[-",
#    \ 'GotoNextMarkerAny'  :  "]=",
#    \ 'GotoPrevMarkerAny'  :  "[=",
#    \ 'ListBufferMarks'    :  "M/",
#    \ 'ListBufferMarkers'  :  "M?"
#\ }
#
#''' }}}

# [[plugins]]
# repo =  'Shougo/neomru.vim'
# hook_add =''' " {{{
# "denite-neomruでginaを無視
# let g:neomru#do_validate = 1
# "let g:neomru#file_mru_ignore_pattern = 
# "      \'\~$\|\.\%(o\|exe\|dll\|bak\|zwc\|pyc\|sw[po]\)$'.
# "      \'\|\%(^\|/\)\.\%(hg\|git\|bzr\|svn\)\%($\|/\)'.
# "      \'\|^\%(\\\\\|/mnt/\|/media/\|/temp/\|/tmp/\|\%(/private\)\=/var/folders/\)'.
# "      \'\|\%(^\%(gina\)://\)'.
# "      \'\|\%(^\%(term\)://\)'
# let g:neomru#file_mru_ignore_pattern = 'term://'
# let g:neomru#time_format = '%m/%d %H:%M'
# let g:neomru#file_mru_limit = 100
# let g:neomru#file_mru_path= '~/.cache/neomru/file'
# ''' # }}}

[[plugins]]
repo =  'mattn/webapi-vim'

[[plugins]]
repo = 'cespare/vim-toml'

# [[plugins]]
# repo = 'vim-airline/vim-airline'

[[plugins]]
repo =  'mengelbrecht/lightline-bufferline'
depends = ['lightline.vim']

[[plugins]]
repo =  'itchyny/vim-gitbranch'
depends = ['lightline.vim']

[[plugins]]
repo = 'orokasan/vim-quack-lightline'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# [[plugins]]
# repo =  'w0ng/vim-hybrid'

[[plugins]]
repo =  'morhetz/gruvbox'
hook_add = ''' " {{{
let g:gruvbox_contrast_dark = 'medium'
let g:gruvbox_italicize_comments = 0
let g:gruvbox_invert_selection = 0
let g:gruvbox_guisp_fallback = 'bg'
''' # }}}

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
autocmd vimrc ColorScheme iceberg highlight PmenuSel ctermbg=236 guibg=#3d425b
autocmd vimrc ColorScheme iceberg highlight Pmenu  ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd vimrc ColorScheme iceberg highlight NormalFloat ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd vimrc ColorScheme iceberg highlight clear Search
autocmd vimrc ColorScheme iceberg highligh Search gui=underline
" colorscheme iceberg
'''

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add =''' " {{{
let g:solarized_old_cursor_style = 1
let g:solarized_italics = 0
let g:solarized_statusline = 'flat'
autocmd vimrc ColorScheme solarized8_flat highlight! VertSplit guifg=#05252C guibg=#05252C
autocmd vimrc ColorScheme solarized8_flat highlight! link EndOfBuffer Comment
autocmd vimrc ColorScheme solarized8_flat highlight! NormalFloat guibg=#05252C
autocmd vimrc ColorScheme solarized8_flat highlight clear Underlined
autocmd vimrc ColorScheme solarized8_flat highlight! Underlined gui=underline,bold
autocmd vimrc ColorScheme solarized8_flat highlight! link Vimfunction Type
colorscheme solarized8_flat
''' # }}}

[[plugins]]
repo = 'markonm/traces.vim'
hook_add ='''
let g:traces_num_range_preview = 1
nnoremap S :<C-u>%s/
vnoremap S :%s/
nnoremap gs :%s///g<Left><Left><Left>
vnoremap gs :<C-u>%s///g<Left><Left><Left>
'''

[[plugins]]
repo = 'Shougo/neco-syntax'
hook_add = '''
'''

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'haya14busa/is.vim'
#TODO:qitta
hook_add = ''' " {{{
let g:is#do_default_mapping = 0
''' # }}}

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = ''' " {{{
"nnoremap <silent><expr> <Plug>(anzu-n-zzzv) anzu#mode#mapexpr("n", "", "zzzv")
"nnoremap <silent><expr> <Plug>(anzu-N-zzzv) anzu#mode#mapexpr("N", "", "zzzv")
"nmap n <Plug>(is-nohl)<Plug>(anzu-n-zzzv)
"nmap N <Plug>(is-nohl)<Plug>(anzu-N-zzzv)
    nmap n <Plug>(is-nohl)<Plug>(anzu-n)zvzz
    nmap N <Plug>(is-nohl)<Plug>(anzu-N)zvzz
    nmap * <Plug>(is-nohl)<Plug>(anzu-star)zvzz
    nmap # <Plug>(is-nohl)<Plug>(anzu-sharp)zvzz
let g:airline#extensions#anzu#enabled = 0
''' # }}}

[[plugins]]
repo = 'moznion/hateblo.vim'
depends = 'webapi-vim'

[[plugins]]
repo =  'kana/vim-operator-user'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'

[[plugins]]
repo =  'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/unite-outline'

[[plugins]]
repo = 'N0nki/denite-markdown'

[[plugins]]
#repo =  'iyuuya/denite-ale'
repo =  'orokasan/denite-ale'

[[plugins]]
repo = 'orokasan/denite-anzu'

[[plugins]]
repo =  'kmnk/denite-dirmark'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
set runtimepath+=/usr/local/opt/fzf/
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:parenmatch_highlight = 0
hi! link ParenMatch MatchParen
'''

# [[plugins]]
# repo = 'mhinz/vim-startify'
# on_if = '!has("nvim")'
# hook_add = ''' " {{{
# let g:startify_files_number = 5
# let g:startify_list_order = [
#         \ ['♻  Most Recently Used Files :'],
#         \ 'files',
#         \ ['♲  MRU in current directory :'],
#         \ 'dir',
#         \ ['⚑  Sessions :'],
#         \ 'sessions',
#         \ ['☺  Bookmark :'],
#         \ 'bookmarks',
#         \ ['Commands :'],
#         \ 'commands'
#         \ ]
# let g:startify_bookmarks = ["~/dotfiles/_vimrc", "~/dotfiles/dein.toml", "~/dotfiles/dein_lazy.toml"]
# let g:startify_commands = [
#     \ {'di': ['DeinInstall', 'DeinInstall']},
#     \ {'du': ['DeinUpdate', 'DeinUpdate']},
#     \ {'dr': ['DeinRecache', 'DeinRecache']}
#     \ ]

#     let g:ascii = [
#           \ '        __',
#           \ '.--.--.|__|.--------.',
#           \ '|  |  ||  ||        |',
#           \ ' \___/ |__||__|__|__|',
#           \ ''
#           \]
# let g:startify_custom_header = g:ascii
# " autocmd User Startified for key in ['b','s','t','v'] |
# "           \ execute 'nunmap <buffer>' key | endfor
# ''' # }}}

#[[plugins]]
#on_if ='has("nvim")'
#repo = 'ncm2/float-preview.nvim'
#hook_add = '''
#let g:float_preview#docked = 0
#let g:float_preview#max_height = 5
#'''

# [[plugins]]
# repo = 'voldikss/vim-floaterm'
# hook_add = '''
# '''

[[plugins]]
## only for incsearch-migemo.vim
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if has('win32')
    let cmd = 'tools\\update-dll-mingw'
  elseif has('win32unix') " for Cygwin
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add ='''
let g:vista_icon_indent = ["▸ ", ""]
let g:vista_echo_cursor = 1
let g:vista_cursor_delay = 200
let g:vista_echo_cursor_strategy = 'floating_win'
let g:vista_finder_alternative_executives = ['vim_lsp']
let g:vista#renderer#enable_icon = 0
'''
# vim:set foldmethod=marker:
