[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo =  'roxma/nvim-yarp'
on_if = '!has("nvim")'

[[plugins]]
repo =  'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo =  'itchyny/lightline.vim'
depends = ['lightline-bufferline']
hook_add = 'source ~/dotfiles/vim/plugins/config/lightline.rc.vim'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'fuenor/JpFormat.vim'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'deton/jasentence.vim'
hook_add = '''
let g:jasentence_endpat = '[、。，．？！]\+'
'''

[[plugins]]
repo = 'tyru/skkdict.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
depends = ['vim-textobj-user']
repo = 'kana/vim-textobj-entire'

[[plugins]]
depends = ['vim-textobj-user']
repo = 'saaguero/vim-textobj-pastedtext'

[[plugins]]
depends = ['vim-textobj-user']
repo = 'rhysd/vim-textobj-anyblock'

[[plugins]]
repo =  'deton/jasegment.vim'
#TODO:qitta
hook_add = ''' "{{{
let g:jasegment#model='knbc_bunsetu'
let g:jasegment#highlight = 0
omap <silent><buffer> aW <Plug>JaSegmentTextObjA
omap <silent><buffer> iW <Plug>JaSegmentTextObjI
xmap <silent><buffer> aW <Plug>JaSegmentTextObjVA
xmap <silent><buffer> iW <Plug>JaSegmentTextObjVI
'''# }}} 

[[plugins]]
repo =  'mattn/webapi-vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo =  'mengelbrecht/lightline-bufferline'
depends = ['lightline.vim']

[[plugins]]
repo =  'itchyny/vim-gitbranch'
depends = ['lightline.vim']

[[plugins]]
repo = 'orokasan/vim-quack-lightline'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
autocmd vimrc ColorScheme iceberg highlight PmenuSel ctermbg=236 guibg=#3d425b
autocmd vimrc ColorScheme iceberg highlight Pmenu  ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd vimrc ColorScheme iceberg highlight NormalFloat ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd vimrc ColorScheme iceberg highlight clear Search
autocmd vimrc ColorScheme iceberg highligh Search gui=underline
" colorscheme iceberg
'''

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add =''' " {{{
let g:solarized_old_cursor_style = 1
let g:solarized_italics = 0
let g:solarized_statusline = 'flat'
autocmd vimrc ColorScheme solarized8_flat highlight! VertSplit guifg=#05252C guibg=#05252C
autocmd vimrc ColorScheme solarized8_flat highlight! link EndOfBuffer Comment
autocmd vimrc ColorScheme solarized8_flat highlight! NormalFloat guibg=#05252C
autocmd vimrc ColorScheme solarized8_flat highlight clear Underlined
autocmd vimrc ColorScheme solarized8_flat highlight! Underlined gui=underline,bold
autocmd vimrc ColorScheme solarized8_flat highlight! link Vimfunction Type
colorscheme solarized8_flat
''' # }}}

[[plugins]]
repo = 'markonm/traces.vim'
hook_add ='''
let g:traces_num_range_preview = 1
nnoremap S :<C-u>%s/
vnoremap S :%s/
nnoremap gs :%s///g<Left><Left><Left>
vnoremap gs :<C-u>%s///g<Left><Left><Left>
'''

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'haya14busa/is.vim'
#TODO:qitta
hook_add = ''' " {{{
let g:is#do_default_mapping = 0
''' # }}}

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = ''' " {{{
"nnoremap <silent><expr> <Plug>(anzu-n-zzzv) anzu#mode#mapexpr("n", "", "zzzv")
"nnoremap <silent><expr> <Plug>(anzu-N-zzzv) anzu#mode#mapexpr("N", "", "zzzv")
"nmap n <Plug>(is-nohl)<Plug>(anzu-n-zzzv)
"nmap N <Plug>(is-nohl)<Plug>(anzu-N-zzzv)
    nmap n <Plug>(is-nohl)<Plug>(anzu-n)zvzz
    nmap N <Plug>(is-nohl)<Plug>(anzu-N)zvzz
    nmap * <Plug>(is-nohl)<Plug>(anzu-star)zvzz
    nmap # <Plug>(is-nohl)<Plug>(anzu-sharp)zvzz
let g:airline#extensions#anzu#enabled = 0
''' # }}}

[[plugins]]
repo =  'kana/vim-operator-user'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'

[[plugins]]
repo =  'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'N0nki/denite-markdown'

[[plugins]]
# repo = 'chemzqm/unite-location'
merged = '0'
repo = 'orokasan/unite-location'

[[plugins]]
repo = 'itchyny/vim-quickrun-lightline-hooks'

[[plugins]]
repo = 'orokasan/denite-anzu'

[[plugins]]
repo =  'kmnk/denite-dirmark'

[[plugins]]
repo = 'hrsh7th/vim-unmatchparen'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:parenmatch_highlight = 0
hi! link ParenMatch MatchParen
'''

[[plugins]]
## only for incsearch-migemo.vim
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if has('win32')
    let cmd = 'tools\\update-dll-mingw'
  elseif has('win32unix') " for Cygwin
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add ='''
let g:vista_icon_indent = ["▸ ", ""]
let g:vista_echo_cursor = 1
let g:vista_cursor_delay = 200
let g:vista_echo_cursor_strategy = 'floating_win'
let g:vista_finder_alternative_executives = ['vim_lsp']
let g:vista#renderer#enable_icon = 0
'''
# vim:set foldmethod=marker:
