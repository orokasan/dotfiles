[user]
	name = orokasan
	email = fuu989@gmail.com
[core]
	editor = nvim
    quotepath = false
    preloadindex = true
    autoCRLF = false
[alias]
        # いい感じのグラフでログを表示
    graph = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
        # 上の省略形
    gr = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
    st = status -sb
    cm = commit -m
        # Untracked filesを表示せず，not stagedと，stagedだけの状態を出力する
    stt = status -uno
    difff = diff --name-only
    # staged diff
    diffs = diff --cached
    dp = diff --no-prefix
    dsp = diff --cached --no-prefix
    sp = stash pop
    ss = stash save
    co = checkout
    l = log --graph --date=short --pretty=\"format:%C(yellow)%h %C(cyan)%ad %C(green)%an%Creset%x09%s %C(red)%d%Creset\"
    la = log --oneline --decorate --graph --branches --tags --remotes
    sgraph = !"git log --oneline --graph"
    ancestor = !zsh -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -n 1' -
    unstage = reset HEAD
    save = stash save -u
    aliases = !git config --get-regexp alias | sed 's/^alias.//g' | sed 's/ / = /1'
    # ファイル別にdiffを見る
    d = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"
    # ブランチ名を絞り込んで切り替える
    co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"
    # stash listでパッチもプレビュー
    sl = !git stash list | fzf --preview 'echo {} | grep -o stash@{.*} | xargs git stash show -p --color=always' --height 90% | grep -o stash@{.*}
    # ↑でプレビューした後にapply
    sa = !git sl | xargs git stash apply
    # ↑でプレビューした後にdrop
    sd = !git sl | xargs git stash drop
[commit]
	verbose = true

[merge]
    tool = vimdiff
    conflictstyle = diff3
    prompt = false
