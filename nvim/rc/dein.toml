[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo =  'roxma/nvim-yarp'
on_if = '!has("nvim")'

[[plugins]]
repo =  'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo =  'itchyny/lightline.vim'
depends = ['lightline-bufferline']
hook_add = 'source ~/dotfiles/nvim/rc/config/lightline.rc.vim'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'fuenor/JpFormat.vim'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'deton/jasentence.vim'
hook_add = '''
let g:jasentence_endpat = '[、。，．？！]\+'
'''

[[plugins]]
repo = 'tyru/skkdict.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'
hook_add = '''
" https://github.com/todesking/dotfiles/blob/master/nvim/plug/plugins.vim
call textobj#user#plugin('lastmofified', {
\   'lastmodified': {
\     'select-a': 'ag',
\     'select-a-function': 'g:Vimrc_select_a_last_modified',
\   },
\ })
function! g:Vimrc_select_a_last_modified() abort
    return ['v', getpos("'["), getpos("']")]
endfunction
'''

[[plugins]]
depends = ['vim-textobj-user']
# ae, ie
repo = 'kana/vim-textobj-entire'

[[plugins]]
depends = ['vim-textobj-user']
# gb
repo = 'saaguero/vim-textobj-pastedtext'

[[plugins]]
# ab, ib
depends = ['vim-textobj-user']
repo = 'rhysd/vim-textobj-anyblock'
hook_add = '''
let g:textobj#anyblock#blocks = ['(', '{', '[', '"', "'", '<' , 'f`']
'''

[[plugins]]
# ay, iy
depends = ['vim-textobj-user']
repo = 'kana/vim-textobj-syntax'

[[plugins]]
# al, il
depends = ['vim-textobj-user']
repo = 'kana/vim-textobj-line'

[[plugins]]
repo =  'deton/jasegment.vim'
#TODO:qitta
hook_add = ''' "{{{
let g:jasegment#model='knbc_bunsetu'
let g:jasegment#highlight = 0
omap <silent><buffer> aW <Plug>JaSegmentTextObjA
omap <silent><buffer> iW <Plug>JaSegmentTextObjI
xmap <silent><buffer> aW <Plug>JaSegmentTextObjVA
xmap <silent><buffer> iW <Plug>JaSegmentTextObjVI
'''# }}} 

[[plugins]]
repo =  'mattn/webapi-vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo =  'mengelbrecht/lightline-bufferline'
merged = '0'
depends = ['lightline.vim']

[[plugins]]
repo =  'itchyny/vim-gitbranch'
depends = ['lightline.vim']

[[plugins]]
repo = 'orokasan/vim-quack-lightline'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
autocmd vimrc ColorScheme iceberg highlight PmenuSel ctermbg=236 guibg=#3d425b
autocmd vimrc ColorScheme iceberg highlight Pmenu  ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd vimrc ColorScheme iceberg highlight NormalFloat ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd vimrc ColorScheme iceberg highlight clear Search
autocmd vimrc ColorScheme iceberg highligh Search gui=underline
'''

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add =''' " {{{
let g:solarized_old_cursor_style = 1
let g:solarized_italics = 0
let g:solarized_statusline = 'flat'
augroup Solarized8
au!
au ColorScheme solarized8_flat hi! DiffChange
    \ cterm=bold ctermbg=5 gui=bold guifg=#b58900 guibg=#073642 guisp=#b58900
au ColorScheme solarized8_flat hi! DiffText
    \ cterm=bold ctermbg=9 gui=bold guifg=#268bd2 guibg=#073642 guisp=#268bd2
au ColorScheme solarized8_flat hi! DiffAdd
    \ cterm=bold ctermbg=4 gui=bold guifg=#859900 guibg=#073642 guisp=#859900
au ColorScheme solarized8_flat hi! VertSplit guifg=#05252C guibg=#05252C
au ColorScheme solarized8_flat hi! link EndOfBuffer Comment
au ColorScheme solarized8_flat hi! NormalFloat guibg=#05252C
au ColorScheme solarized8_flat hi clear Underlined
au ColorScheme solarized8_flat hi! Underlined gui=underline,bold
au ColorScheme solarized8_flat hi! link Vimfunction Type
au ColorScheme solarized8_flat hi! link diffSubname Comment
au ColorScheme solarized8_flat hi! link diffIndexLine Comment
if has('GUI') || has('nvim')
    autocmd ColorScheme solarized8_flat hi link Folded NonText
    autocmd ColorScheme solarized8_flat hi Folded guifg=bold
endif
augroup END
''' # }}}

[[plugins]]
repo = 'markonm/traces.vim'
hook_add ='''
let g:traces_num_range_preview = 1
nnoremap S :<C-u>%s/
vnoremap S :%s/
nnoremap gs :%s///g<Left><Left>
vnoremap gs :<C-u>%s///g<Left><Left>
'''

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'haya14busa/is.vim'
#TODO:qitta
hook_add = ''' " {{{
let g:is#do_default_mapping = 0
''' # }}}

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = ''' " {{{
"nnoremap <silent><expr> <Plug>(anzu-n-zzzv) anzu#mode#mapexpr("n", "", "zzzv")
"nnoremap <silent><expr> <Plug>(anzu-N-zzzv) anzu#mode#mapexpr("N", "", "zzzv")
"nmap n <Plug>(is-nohl)<Plug>(anzu-n-zzzv)
"nmap N <Plug>(is-nohl)<Plug>(anzu-N-zzzv)
    nmap n <Plug>(is-nohl)<Plug>(anzu-n)zvzz
    nmap N <Plug>(is-nohl)<Plug>(anzu-N)zvzz
    nmap * <Plug>(is-nohl)<Plug>(anzu-star)zvzz
    nmap # <Plug>(is-nohl)<Plug>(anzu-sharp)zvzz
let g:airline#extensions#anzu#enabled = 0
''' # }}}

[[plugins]]
repo =  'kana/vim-operator-user'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'

[[plugins]]
repo =  'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'N0nki/denite-markdown'

# [[plugins]]
# # repo = 'chemzqm/unite-location'
# merged = '0'
# repo = 'orokasan/unite-location'

[[plugins]]
repo = 'itchyny/vim-quickrun-lightline-hooks'

[[plugins]]
repo = 'orokasan/denite-anzu'

[[plugins]]
repo =  'kmnk/denite-dirmark'

[[plugins]]
repo = 'lambdalisue/vim-quickrun-neovim-job'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:parenmatch_highlight = 0
hi! link ParenMatch MatchParen
'''

[[plugins]]
## only for incsearch-migemo.vim
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if has('win32')
    let cmd = 'tools\\update-dll-mingw'
  elseif has('win32unix') " for Cygwin
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'thinca/vim-ambicmd'
hook_add = '''
set wildcharm=<TAB>
let g:ambicmd#show_completion_menu = 1
augroup init_ambicmd
  autocmd!
  autocmd CmdwinEnter * call s:init_cmdwin()
  autocmd VimEnter * call s:init_ambicmd()
augroup END
function! s:init_ambicmd() abort
" sourceできた時のみマップする
" `ambicmd#expand`が無いときcmdlineでまともに入力できなくなる
if dein#is_sourced('vim-ambicmd')
  cnoremap <expr> <Space> ambicmd#expand("\<Space>")
  cnoremap <expr> <CR>    ambicmd#expand("\<CR>")
endif
endfunction
function! s:init_cmdwin()
  inoremap <buffer> <expr> <Space> ambicmd#expand("\<Space>")
  inoremap <buffer> <expr> <CR>    ambicmd#expand("\<CR>")
endfunction
'''

[[plugins]]
repo = 'chemzqm/denite-extra'

# [[plugins]]
# repo = 'airblade/vim-gitgutter'
# hook_add = '''
# let g:gitgutter_sign_added = '++'
# let g:gitgutter_sign_modified = '~~'
# let g:gitgutter_sign_removed = '--'
# let g:gitgutter_sign_removed_first_line = '__'
# let g:gitgutter_sign_modified_removed = '~-'
# '''

[[plugins]]
repo = 'glacambre/firenvim'
hook_post_update = 'call firenvim#install(0)'
hook_add = '''
if exists('g:started_by_firenvim')
  set showtabline=0
  set laststatus=2
  " call lightline#disable()
augroup Firenvim
    au BufEnter * call Set_Font(g:firenvim_font)
    au BufEnter *     colorscheme iceberg
    au BufEnter github.com_*.txt set filetype=markdown
  au BufEnter github.com_*.txt set filetype=markdown | call Set_Font(g:firenvim_font)
  au BufEnter play.rust-lang.org_*.txt set filetype=rust | call Set_Font(g:firenvim_font)
  au BufEnter play.golang.org_*.txt set filetype=go |call Set_Font(g:firenvim_font)
augroup END
endif
let g:firenvim_font = 'Cica'
function! Set_Font(font) abort
  execute 'set guifont=' . a:font . ':h10'
endfunction
'''

[[plugins]]
# colorscheme seagull
repo = 'nightsense/seabird'
hook_add = '''
au ColorScheme seagull hi NormalFloat guibg=#fbffff
au ColorScheme seagull hi clear Search
au ColorScheme seagull hi link Search IncSearch
au ColorScheme seagull hi MatchParen ctermfg=1 ctermbg=NONE gui=reverse guifg=#ff4053 guibg=NONE
au ColorScheme seagull hi Comment cterm=NONE ctermfg=14 guifg=#808487 gui=NONE
'''
[[plugins]]
repo = 'nightsense/snow'

[[plugins]]
repo = 'dstein64/vim-startuptime'

[[plugins]]
repo = 'lambdalisue/fern.vim'

# vim:set foldmethod=marker:
