[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
augroup dein
    autocmd!
augroup END
'''

[[plugins]]
repo =  'roxma/nvim-yarp'
on_if = '!has("nvim")'

[[plugins]]
repo =  'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo =  'itchyny/lightline.vim'
depends = ['lightline-bufferline']
hook_add = 'source ~/dotfiles/nvim/rc/config/lightline.rc.vim'

# [[plugins]]
# on_if = '!has("kaoriya")'
# repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'fuenor/JpFormat.vim'

[[plugins]]
on_if = '!has("kaoriya")'
repo = 'deton/jasentence.vim'
hook_add = '''
let g:jasentence_endpat = '[、。，．？！]\+'
'''

[[plugins]]
repo = 'tyru/skkdict.vim'

[[plugins]]
repo = 'kana/vim-textobj-user'
hook_add = '''
" https://github.com/todesking/dotfiles/blob/master/nvim/plug/plugins.vim
if exists('*textobj#user#plugin')
call textobj#user#plugin('lastmofified', {
\   'lastmodified': {
\     'select-a': 'ag',
\     'select-a-function': 'g:Vimrc_select_a_last_modified',
\   },
\ })
endif
function! g:Vimrc_select_a_last_modified() abort
    return ['v', getpos("'["), getpos("']")]
endfunction
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'

[[plugins]]
repo =  'deton/jasegment.vim'
#TODO:qitta
hook_add = ''' "{{{
let g:jasegment#model='knbc_bunsetu'
let g:jasegment#highlight = 0
"omap <silent><buffer> aW <Plug>JaSegmentTextObjA
"omap <silent><buffer> iW <Plug>JaSegmentTextObjI
"xmap <silent><buffer> aW <Plug>JaSegmentTextObjVA
"xmap <silent><buffer> iW <Plug>JaSegmentTextObjVI
'''# }}} 

[[plugins]]
repo =  'mattn/webapi-vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo =  'mengelbrecht/lightline-bufferline'
depends = ['lightline.vim']

[[plugins]]
repo =  'itchyny/vim-gitbranch'
depends = ['lightline.vim']

# [[plugins]]
# repo = 'orokasan/vim-quack-lightline'

 # [[plugins]]
 # repo = 'Shougo/context_filetype.vim'
 # hook_add = '''
 # let g:context_filetype#search_offset = 100
# '''

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
autocmd dein ColorScheme iceberg highlight PmenuSel ctermbg=236 guibg=#3d425b
autocmd dein ColorScheme iceberg highlight Pmenu  ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd dein ColorScheme iceberg highlight NormalFloat ctermfg=252 ctermbg=236 guifg=#c6c8d1 guibg=#272c42
autocmd dein ColorScheme iceberg highlight clear Search
autocmd dein ColorScheme iceberg highligh Search gui=underline
'''

# [[plugins]]
# repo = 'lifepillar/vim-solarized8'
# hook_add =''' " {{{
# let g:solarized_old_cursor_style = 1
# let g:solarized_italics = 0
# let g:solarized_statusline = 'flat'
# augroup Solarized8
# au!
# au ColorScheme solarized8_flat hi! DiffChange
#     \ cterm=bold ctermbg=5 gui=bold guifg=#b58900 guibg=#073642 guisp=#b58900
# au ColorScheme solarized8_flat hi! DiffText
#     \ cterm=bold ctermbg=9 gui=bold guifg=#268bd2 guibg=#073642 guisp=#268bd2
# au ColorScheme solarized8_flat hi! DiffAdd
#     \ cterm=bold ctermbg=4 gui=bold guifg=#859900 guibg=#073642 guisp=#859900
# au ColorScheme solarized8_flat hi! VertSplit guifg=#05252C guibg=#05252C
# au ColorScheme solarized8_flat hi! link EndOfBuffer Comment
# au ColorScheme solarized8_flat hi! NormalFloat guibg=#05252C
# au ColorScheme solarized8_flat hi clear Underlined
# au ColorScheme solarized8_flat hi! Underlined gui=underline,bold
# au ColorScheme solarized8_flat hi! link Vimfunction Type
# au ColorScheme solarized8_flat hi! link diffSubname Comment
# au ColorScheme solarized8_flat hi! link diffIndexLine Comment
# if has('GUI') || has('nvim')
#     autocmd ColorScheme solarized8_flat hi link Folded NonText
#     autocmd ColorScheme solarized8_flat hi Folded guifg=bold
# endif
# augroup END
# ''' # }}}

# [[plugins]]
# repo = 'markonm/traces.vim'
# hook_add ='''
# let g:traces_num_range_preview = 1
# nnoremap S :<C-u>%s/
# vnoremap S :%s/
# nnoremap gs :%s///g<Left><Left>
# vnoremap gs :<C-u>%s///g<Left><Left>
# '''

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'

[[plugins]]
repo = 'ujihisa/neco-look'

# [[plugins]]
# repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'haya14busa/is.vim'
#TODO:qitta
hook_add = ''' " {{{
let g:is#do_default_mapping = 0
nmap n <Plug>(is-n)zvzz
nmap N <Plug>(is-N)zvzz
''' # }}}

# [[plugins]]
# repo = 'osyo-manga/vim-anzu'
# hook_add = ''' " {{{
# "nnoremap <silent><expr> <Plug>(anzu-n-zzzv) anzu#mode#mapexpr("n", "", "zzzv")
# "nnoremap <silent><expr> <Plug>(anzu-N-zzzv) anzu#mode#mapexpr("N", "", "zzzv")
# "nmap n <Plug>(is-nohl)<Plug>(anzu-n-zzzv)
# "nmap N <Plug>(is-nohl)<Plug>(anzu-N-zzzv)
# let g:airline#extensions#anzu#enabled = 0
# ''' # }}}

[[plugins]]
repo =  'kana/vim-operator-user'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'

[[plugins]]
repo =  'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'N0nki/denite-markdown'

# [[plugins]]
# # repo = 'chemzqm/unite-location'
# merged = '0'
# repo = 'orokasan/unite-location'

[[plugins]]
repo = 'itchyny/vim-quickrun-lightline-hooks'

[[plugins]]
repo = 'orokasan/denite-anzu'

[[plugins]]
repo =  'kmnk/denite-dirmark'

[[plugins]]
repo = 'lambdalisue/vim-quickrun-neovim-job'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:parenmatch_highlight = 0
hi! link ParenMatch MatchParen
'''

[[plugins]]
## only for incsearch-migemo.vim
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if has('win32')
    let cmd = 'tools\\update-dll-mingw'
  elseif has('win32unix') " for Cygwin
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'chemzqm/denite-extra'

[[plugins]]
# repo =  'Shougo/neoyank.vim'
repo =  'orokasan/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']
hook_add = '''
let g:neoyank#save_registers = ['*']
autocmd dein TextYankPost * call neoyank#update()
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_sign_added = '++'
let g:gitgutter_sign_modified = '~~'
let g:gitgutter_sign_removed = '--'
let g:gitgutter_sign_removed_first_line = '__'
let g:gitgutter_sign_modified_removed = '+-'
let g:gitgutter_sign_priority = 0
let g:gitgutter_preview_win_floating = 0
autocmd dein ColorScheme * highlight link GitGutterAdd String
autocmd dein ColorScheme * highlight link GitGutterChange Constant
nmap <Leader>xp <Plug>(GitGutterPreviewHunk)
nmap <Leader>xx <Plug>(GitGutterStageHunk)
nmap <Leader>xu <Plug>(GitGutterUndoHunk)
'''

# [[plugins]]
# repo = 'glacambre/firenvim'
# on_if = 'has("nvim")'
# hook_post_update = 'call firenvim#install(0)'
# hook_add = '''
# if exists('g:started_by_firenvim')
#   set showtabline=0
#   set laststatus=2
#   " call lightline#disable()
# augroup Firenvim
#     au BufEnter * call Set_Font(g:firenvim_font)
#     au BufEnter *     colorscheme iceberg
#     au BufEnter github.com_*.txt set filetype=markdown
#   au BufEnter github.com_*.txt set filetype=markdown | call Set_Font(g:firenvim_font)
#   au BufEnter play.rust-lang.org_*.txt set filetype=rust | call Set_Font(g:firenvim_font)
#   au BufEnter play.golang.org_*.txt set filetype=go |call Set_Font(g:firenvim_font)
# augroup END
# endif
# let g:firenvim_font = 'Cica'
# function! Set_Font(font) abort
#   execute 'set guifont=' . a:font . ':h10'
# endfunction
# '''

[[plugins]]
# colorscheme seagull
repo = 'nightsense/seabird'
hook_add = '''
" au ColorScheme seagull hi NormalFloat guibg=#fbffff
au ColorScheme seagull hi! NormalFloat guibg=#f5f5f5
au ColorScheme seagull hi! clear Search
au ColorScheme seagull hi! link Search IncSearch
au ColorScheme seagull hi! clear MatchParen
au ColorScheme seagull hi! MatchParen ctermfg=1 ctermbg=NONE guibg=#b4b8bf
au ColorScheme seagull hi! Comment cterm=NONE ctermfg=14 guifg=#8d9193 gui=NONE
au ColorScheme seagull hi! link SignColumn CursorColumn
'''
[[plugins]]
repo = 'nightsense/snow'

# [[plugins]]
# repo = 'dstein64/vim-startuptime'

# [[plugins]]
# repo = 'lambdalisue/fern.vim'
# hook_add = 'let g:fern#loaded = 1 '

# [[plugins]]
# repo =  'rhysd/git-messenger.vim'

[[plugins]]
repo = 'thinca/vim-qfreplace'

# [[plugins]]
# repo = 'tpope/vim-sleuth'

[[plugins]]
merged = '0'
repo ='eikendev/denite-fzf'

[[plugins]]
repo = 'vim-scripts/autodate.vim'
hook_add = '''
let g:autodate_format="%Y-%m-%d[%H:%M]"
'''

# [[plugins]]
# repo = 'numirias/semshi'
# # on_ft = 'python'
# # on_cmd = ['Semshi']
# hook_add = '''
# let g:semshi#simplify_markup = v:true
# let g:semshi#error_sign = v:false
# function! MyCustomHighlights()
#   hi semshiLocal           ctermfg=209 guifg=#ff875f
#   hi semshiGlobal          ctermfg=214 guifg=#ff6200
#   "hi! link semshiImported   Normal
#   hi semshiImported   guifg=#9854ff gui=NONE
#   " hi semshiParameter       ctermfg=75  guifg=#9854ff
#   hi! link semshiParameter   Special
#   hi semshiParameterUnused ctermfg=117 guifg=#87d7ff cterm=underline gui=underline
#   hi semshiFree            ctermfg=218 guifg=#ffafd7
#   hi! link semshiBuiltin      Type
#   hi semshiAttribute       ctermfg=49  guifg=#0099ff
#   hi! link semshiSelf          Comment
#   hi clear semshiUnresolved
#   hi clear semshiSelected        gui=underline
#   hi semshiSelected        gui=underline
#   hi semshiErrorSign       ctermfg=231 guifg=#ffffff ctermbg=160 guibg=#d70000
#   hi semshiErrorChar       ctermfg=231 guifg=#ffffff ctermbg=160 guibg=#d70000
# endfunction
# autocmd dein FileType python call MyCustomHighlights()
# '''

# [[plugins]]
# # repo = 'haya14busa/incsearch.vim'
# merged = 0
# repo = 'orokasan/incsearch.vim'
# hook_add = 'let g:incsearch#auto_nohlsearch = 1'
# # TODO vimproc依存をなくす

# [[plugins]]
# # repo = 'haya14busa/incsearch-migemo.vim'
# merged = 0
# repo = 'orokasan/incsearch-migemo.vim'
# on_if = "!has('kaoriya')"
# # depends = 'incsearch.vim'
# # on_map = { nx = '<Plug>(incsearch-migemo-' }
# hook_add = '''
# map g/ <Plug>(incsearch-migemo-/)
# map g? <Plug>(incsearch-migemo-?)
# '''

# [[plugins]]
# repo = 'heavenshell/vim-textlint' 

[[plugins]]
repo = 'rhysd/conflict-marker.vim'

# [[plugins]]
# depends = ['context_filetype.vim']
# repo = 'osyo-manga/vim-precious'
# hook_source = '''
# " カーソル移動時の自動切り替えを無効化
# " このオプションは filetype ごとに設定可能
# " "*" は全ての filetype に影響する
# " let g:precious_enable_switch_CursorMoved = {
# " \   "*" : 0
# " \}
# " let g:precious_enable_switch_CursorMoved_i = {
# " \   "*" : 0
# " \}
# " " insert に入った時にスイッチし、抜けた時に元に戻す
# " augroup test
# "     autocmd!
# "     autocmd InsertEnter * :PreciousSwitch
# " augroup END
# '''
# [[plugins]]
# merged = 0
# repo =  'vim-jp/vital.vim' 

# [[plugins]]
# repo =  'haya14busa/revital.vim' 

# [[plugins]]
# repo = 'danilamihailov/beacon.nvim'
# merged = 0
# hook_add = '''
# let g:beacon_fade = 1
# let g:beacon_size = 15
# let g:beacon_shrink = 1
# let g:beacon_show_jumps = 0
# let g:beacon_timeout=200
# let g:beacon_minimal_jump = 50
# " let g:beacon_ignore_buffers = ['\[Command Line\]']
# au ColorScheme * highlight Beacon guibg=#e2a478 ctermbg=15
# '''

[[plugins]]
repo =  'lambdalisue/gina.vim'
hook_add = '''
nnoremap <silent> <Leader><Leader> :<C-u>Gina status<CR>
nnoremap <silent> <Leader>gA :<C-u>Gina changes HEAD<CR>
nnoremap <silent> <Leader>a :<C-u>Gina add %<CR>
nnoremap <silent> <Leader>gc :<C-u>Gina commit<CR>
nnoremap <silent> <Leader>gC :<C-u>Gina commit --amend<CR>
nnoremap <silent> <Leader>gb :<C-u>Gina branch -av<CR>
nnoremap <silent> <Leader>gB :<C-u>nos Gina blame<CR>
nnoremap <silent> <Leader>gt :<C-u>Gina tag<CR>
nnoremap <silent> <Leader>gq :<C-u>Gina qrep<CR>
nnoremap <silent> <Leader>gd :<C-u>nos Gina compare<CR>zz
nnoremap <silent> <Leader>gg :<C-u>Gina diff<CR>
nnoremap <silent> <Leader>gs :<C-u>Gina df<CR>
nnoremap <silent> <Leader>gD :<C-u>Gina changes origin/HEAD...<CR>
nnoremap <silent> <Leader>gl :<C-u>Gina log<CR>
nnoremap <silent> <Leader>gL :<C-u>Gina log %<CR>
nnoremap <silent> <Leader>gf :<C-u>Gina ls<CR>
nnoremap <silent> <Leader>gp :<C-u>Gina!! add -p<CR>
let g:gina#core#spinner#delaytime = 10
call gina#custom#command#alias('branch', 'br')
call gina#custom#command#alias('diff', 'df')
call gina#custom#command#option('df', '--stat')
call gina#custom#command#option(
    \ '/\%(log\|reflog\|diff\)',
    \ '--opener', 'vsplit'
    \)
call gina#custom#command#option(
    \ '/\%(status\|branch\|ls\|grep\|changes\|tag\|df\)',
    \ '--opener' , 'botright 10split'
    \)
call gina#custom#command#option('commit', '--opener' , 'split')
call gina#custom#command#option('log', '--group', 'log-viewer')
call gina#custom#command#option('status', '--group', 'status-viewer')
call gina#custom#command#option('reflog', '--group', 'reflog-viewer')
call gina#custom#command#option('commit', '-v|--verbose')
call gina#custom#command#option('commit', '--group', 'status-viewer')
" call gina#custom#command#option('diff', '-U0')
call gina#custom#command#option('compare', '-R')
call gina#custom#command#option('branch', '-v', 'v')
call gina#custom#command#option('status', '--short')
call gina#custom#command#option('status', '--branch')
call gina#custom#command#option('log', '--graph')
call gina#custom#command#option('/\%(status\|commit\)', '-u|--untracked-files')
"call gina#custom#command#option(
"\ '/\%(status\|changes\)',
"\ '--ignore-submodules'
"\)
"call gina#custom#action#alias(
"\ 'branch', 'track',
"\ 'checkout:track'
"\)
call gina#custom#action#alias( 'branch', 'merge', 'commit:merge')
call gina#custom#action#alias( 'branch', 'rebase', 'commit:rebase')
call gina#custom#mapping#nmap(
    \ '/.*', 'gq',
    \ ':tabclose<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ '/.*', 'q',
    \ ':close<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'status', '<C-^>',
    \ ':<C-u>Gina commit<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'commit', '<C-^>',
    \ ':<C-u>Gina status<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'status', '<C-6>',
    \ ':<C-u>Gina commit<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'status', '-',
    \ '<Plug>(gina-index-toggle)',
    \ { 'silent': 1, 'nowait': 1}
    \)
call gina#custom#mapping#vmap(
    \ 'status', '-',
    \ '<Plug>(gina-index-toggle)',
    \ { 'silent': 1, 'nowait': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'status', 'c',
    \ ':<C-u>Gina commit<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'status', 'C',
    \ ':<C-u>Gina compare<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'commit', '<C-6>',
    \ ':<C-u>Gina status<CR>',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#mapping#nmap(
    \ 'commit', 'I',
    \ 'ggI',
    \ {'noremap': 1, 'silent': 1}
    \)
call gina#custom#action#alias(
      \ '/\%(blame\|log\|reflog\)',
      \ 'preview',
      \ 'topleft show:commit:preview',
      \)
call gina#custom#action#alias(
      \ '/\%(blame\|log\|reflog\)',
      \ 'preview',
      \ 'show:commit:above',
      \)
call gina#custom#mapping#nmap(
      \ '/\%(blame\|log\|reflog\)',
      \ 'yy',
      \ ':<C-u>call gina#action#call(''yank:rev'')<CR>',
      \ {'noremap': 1}
      \)
call gina#custom#mapping#nmap(
      \ '/\%(blame\|log\|reflog\)',
      \ 'yy',
      \ ':<C-u>call gina#action#call(''yank:rev'')<CR>',
      \ {'noremap': 1, 'silent': 1}
      \)
call gina#custom#action#alias(
      \ '/\%(blame\|log\|reflog\)',
      \ 'changes',
      \ 'topleft changes:of:preview',
      \)
call gina#custom#action#alias(
      \ '/\%(blame\|log\|reflog\)',
      \ 'changes',
      \ 'changes:of:preview',
      \)
call gina#custom#mapping#nmap(
      \ '/\%(blame\|log\|reflog\)',
      \ 'c',
      \ ':<C-u>call gina#action#call(''changes'')<CR>',
      \ {'noremap': 1, 'silent': 1}
      \)
call gina#custom#execute(
      \ '/\%(ls\|log\|reflog\|grep\)',
      \ 'setlocal noautoread',
      \)
call gina#custom#execute(
      \ '/\%(status\|branch\|ls\|log\|reflog\|grep\)',
      \ 'setlocal cursorline',
      \)
'''

[[plugins]]
merged = '0'
repo = 'liuchengxu/vim-clap'

[[plugins]]
merged = '0'
repo =  'twitvim/twitvim' 
hook_add = '''
'''

# vim:set foldmethod=marker:
