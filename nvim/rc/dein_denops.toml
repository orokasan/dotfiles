[[plugins]]
repo = 'vim-denops/denops.vim'

# [[plugins]]
# lazy = 1
# on_cmd = ['GhostStart']
# repo = 'gamoutatsumi/dps-ghosttext.vim'

# [[plugins]]
# repo = 'lambdalisue/guise.vim'
# depends = ['denops.vim']

[[plugins]]
lazy = 1
on_cmd = ['Gin']
repo = 'lambdalisue/gin.vim'
hook_add = '''
nnoremap <silent> <Leader>gg
\ <Cmd>GinStatus<CR>
nnoremap <silent> <Leader>gb
\ <Cmd>GinBranch<CR>
nnoremap <silent> <Leader>gl
\ <Cmd>GinLog<CR>
nnoremap <silent> <Leader>gc
\ <Cmd>Gin ++opener=botright\ split commit<CR>
nnoremap <silent> <Leader>gd <Cmd>diffthis \| GinEdit! HEAD %:p ++opener=vsplit \| diffthis<CR>
let g:gin_log_default_args = ['++opener=botright vsplit', '--graph', '--abbrev-commit', '--pretty=format:%Cred%h%Creset %s %C(yellow)%d%Creset %Cgreen(%cr) %C(bold blue)<%an>%Creset']
let g:gin_status_default_args = ['++opener=botright split']
let g:gin_branch_default_args = ['++opener=botright split']

au vimrc BufEnter * if &ft =~# 'gin-.*' | call <SID>gin_mapping() | endif
function! s:gin_mapping() abort
  nnoremap <buffer> q <cmd>close<CR>
endfunction

function! s:define_gin_local() abort
  command! -buffer -bar GinLocal execute 'edit' gin#util#expand('%')
  nnoremap <buffer> q <cmd>close<CR>
endfunction

augroup my-gin-local
  autocmd BufReadCmd ginedit://* call s:define_gin_local()
  autocmd BufReadCmd gindiff://* call s:define_gin_local()
  autocmd FileType gin call s:define_gin_local()
  " autocmd BufReadCmd ginlog://* call s:define_gin_local()
augroup END
'''

[[plugins]]
repo = 'Shougo/ddc.vim'
lazy = 1
depends = ['denops.vim']
on_event = ['InsertEnter', 'CmdlineEnter']
hook_source = 'source ~/dotfiles/nvim/rc/config/ddc.rc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'

[[plugins]]
repo = 'Shougo/ddc-cmdline'

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'matsui54/ddc-buffer'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'vim-skk/denops-skkeleton.vim'
merged = 0
# on_map = { i = '<Plug>(skkeleton-' }
hook_add = '''
imap <C-j> <Plug>(skkeleton-toggle)
cmap <C-j> <Plug>(skkeleton-enable)
autocmd dein ColorScheme * hi InInsertSign gui=bold guifg=#84a0c6
autocmd dein ColorScheme * hi InEskkKanaSign gui=bold guifg=#e2a478

let s:insertpos = 0
let s:insert_icon = '▶'

"call sign_define('InInsert',{'text':s:insert_icon,'texthl':'InInsertSign' ,'priority': 50 })
"call sign_define('InEskkKana',{'text':s:insert_icon,'texthl':'InEskkKanaSign', 'priority': 50 })
"call sign_define('InEskkKat',{'text':s:insert_icon,'texthl':"Constant" ,'priority': 51 })

"au vimrc InsertEnter * let s:insertpos = line('.') | call s:insert_highlight()
"au vimrc CursorMovedI * if s:insertpos != line('.') | call s:insert_highlight() | let s:insertpos = line('.') | endif
"
"if has('nvim')
"au vimrc InsertLeavePre * call sign_unplace('Ins')
"else
"au vimrc InsertLeave * call sign_unplace('Ins')
"endif
"
"function! s:insert_highlight() abort
"call sign_unplace('Ins')
"if &l:iminsert
"call sign_place( 15,'Ins','InEskkKana','%',{'lnum':line('.')} )
"else
"call sign_place( 10,'Ins','InInsert','%',{'lnum':line('.')} )
"endif
"endfunction

autocmd vimrc User skkeleton-enable-post call s:highlight_imesign_on()
autocmd vimrc User skkeleton-disable-post call s:highlight_imesign_off()

function! s:highlight_imesign_off()
if mode() is# 'c' | return | endif
lua vim.api.nvim_set_hl(0, 'SmoothCursor', { fg = '#c6c8d1' })
endfunction

function! s:highlight_imesign_on()
if mode() is# 'c' | return | endif
lua vim.api.nvim_set_hl(0, 'SmoothCursor', { fg= '#e2a478'})
endfunction


call skkeleton#config({
\ 'globalJisyo': expand('~/GoogleDrive/config/.skk/SKK-JISYO.L'),
\ 'userJisyo': expand('~/GoogleDrive/config/.skk/.skk-jisyo'),
\ 'completionRankFile': expand('~/.skk/.skkeleton_rank'),
\ 'eggLikeNewline': v:true,
\ 'registerConvertResult': v:true,
\ 'showCandidatesCount': 3,
\ 'immediatelyCancel': v:false,
\ 'keepState': v:false,
\})

call skkeleton#register_kanatable('rom', {
\ '\<C-w>': 'deleteChar',
\ "z\<Space>": ["\u3000", ''],
\ 'va': ['ゔぁ', ''],
\ 'vi': ['ゔぃ', ''],
\ 'vu': ['ゔ', ''],
\ 've': ['ゔぇ', ''],
\ 'vo': ['ゔぉ', ''],
\ 'ca': ['か', ''],
\ 'ci': ['し', ''],
\ 'cu': ['く', ''],
\ 'ce': ['せ', ''],
\ 'co': ['こ', ''],
\ 'xn': ['ん', ''],
\ 'zn': ['〓', ''],
\ 'zb': ['■', ''],
\ 'zm': ['●', ''],
\ 'zss': ['▼', ''],
\ 'zsu': ['▲', ''],
\ 'zha': ['☆', ''],
\ 'zv': ['★', ''],
\ 'zx': ['○', ''],
\ 'zds': ['◇', ''],
\ 'zdk': ['◆', ''],
\ 'z1': ['１', ''],
\ 'z2': ['２', ''],
\ 'z3': ['３', ''],
\ 'z4': ['４', ''],
\ 'z5': ['５', ''],
\ 'z6': ['６', ''],
\ 'z7': ['７', ''],
\ 'z8': ['８', ''],
\ 'z9': ['９', ''],
\ 'z0': ['０', ''],
\ 'zz0': ['⓪ ', ''],
\ 'zz1': ['①', ''],
\ 'zz2': ['②', ''],
\ 'zz3': ['③', ''],
\ 'zz4': ['④', ''],
\ 'zz5': ['⑤', ''],
\ 'zz6': ['⑥', ''],
\ 'zz7': ['⑦', ''],
\ 'zz8': ['⑧', ''],
\ 'zz9': ['⑨', ''],
\ 'z-': ['-', ''],
\ '(': ['（', ''],
\ ')': ['）', ''],
\ 'z(': ['(', ''],
\ 'z)': [')', ''],
\ 'z{': ['【', ''],
\ 'z}': ['】', ''],
\ '{': ['［', ''],
\ '}': ['］', ''],
\ 'z%': ['％', ''],
\ 'z.': ['…', ''],
\ '~': ['〜', ''],
\ 'z/': ['・', ''],
\ 'z,': ['●', ''],
\ })

call skkeleton#register_keymap('input', ';', 'henkanPoint')

nnoremap i <cmd>setlocal iminsert=0<CR>i


'''
[[plugins]]
repo ='kat0h/bufpreview.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'Shougo/ddc-ui-pum'

[[plugins]]
repo = 'Shougo/ddc-ui-native'

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_length'

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'

# [[plugins]]
# repo = 'matsui54/denops-signature_help'
# #on_source = ['ddc.vim']
# depends = ['denops.vim']
# hook_source = '''
# call signature_help#enable()
# '''

[[plugins]]
repo = 'Shougo/ddu.vim'
# lazy = 1
# on_func = 'ddu#start'
merged = 0
hook_add = '''
source ~/dotfiles/nvim/rc/config/ddu_mapping.rc.vim
"source ~/miniddu.vim
'''
hook_post_source = '''
source ~/dotfiles/nvim/rc/config/ddu.rc.vim
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
[[plugins]]
# lazy = 1
# on_source = ['ddu.vim']
merged = 0
repo = 'Shougo/ddu-ui-ff'
[[plugins]]
repo = 'Shougo/ddu-source-file'
[[plugins]]
repo = 'Shougo/ddu-kind-file'
[[plugins]]
repo = 'Shougo/ddu-source-file_point'
[[plugins]]
repo = 'Shougo/ddu-source-file_old'
[[plugins]]
repo = 'Shougo/ddu-source-line'
[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
[[plugins]]
repo = 'Shougo/ddu-kind-word'
[[plugins]]
repo ='shun/ddu-source-buffer'
[[plugins]]
repo ='kuuote/ddu-source-mr'
[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
[[plugins]]
repo = 'matsui54/ddu-source-file_external'
[[plugins]]
repo = 'matsui54/ddu-source-help'
[[plugins]]
repo = 'gamoutatsumi/ddu-source-nvim-lsp'
[[plugins]]
repo = 'shun/ddu-source-rg'
[[plugins]]
repo = 'Shougo/ddu-source-action'
[[plugins]]
repo = 'kuuote/ddu-matcher-fuse'
[[plugins]]
repo = 'matsui54/ddu-filter-fzy'
[[plugins]]
repo = 'Bakudankun/ddu-source-dirmark'
[[plugins]]
repo = 'nekowasabi/ddu-filter-matcher_migemo'
[[plugins]]
repo = 'matsui54/ddc-postfilter_score'
[[plugins]]
repo = 'matsui54/ddu-source-dein_update'
[[plugins]]
lazy = 1
on_cmd = ['Glance']
repo = 'tani/glance-vim'
hook_source = '''
" let g:glance#plugins = ['https://esm.sh/markdown-it-checkbox']
let g:markdown_fenced_languages = [
    \ 'bash=sh', 'javascript', 'js=javascript', 'json=javascript', 'typescript',
    \ 'ts=typescript', 'php', 'html', 'css', 'rust', 'sql', 'lua']
'''
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_hidden'
[[plugins]]
# lazy = 1
# on_source = ['ddu.vim']
repo = 'Shougo/ddu-ui-filer'
[[plugins]]
repo = 'Bakudankun/ddu-filter-matchfuzzy'
[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'
[[plugins]]
repo = 'Shougo/ddu-column-filename'
[[plugins]]
repo = 'Shougo/ddu-source-vim'
[[plugins]]
repo = 'k-ota106/ddu-source-marks'
[[plugins]]
repo = 'matsui54/denops-signature_help'
[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'

[[plugins]]
repo = 'mikanIchinose/ddu-source-markdown'

[[plugins]]
repo = 'Milly/ddc-source-register'

[[plugins]]
repo = 'yukimemi/dps-hitori'
hook_add = '''
let g:hitori_debug = v:false  " debug console.log
let g:hitori_quit = v:true    " whether to exit after attaching
'''

[[plugins]]
repo = 'Milly/ddu-filter-kensaku'

[[plugins]]
repo = 'lambdalisue/kensaku.vim'

[[plugins]]
repo = 'lambdalisue/kensaku-command.vim'

[[plugins]]
repo = 'lambdalisue/kensaku-search.vim'
hook_add = '''
'''

# [[plugins]]
# if = 'executable("gh")'
# repo = 'skanehira/denops-gh.vim'

[[plugins]]
repo = 'Milly/ddu-filter-merge'

[[plugins]]
repo = 'hasundue/ddu-filter-zf'
build = 'deno task build'

[[plugins]]
repo = 'Shougo/ddc-ui-inline'

[[plugins]]
repo = 'tennashi/ddu-source-git'

[[plugins]]
repo = 'uga-rosa/ddu-source-lsp'

[[plugins]]
repo ='kuuote/ddu-source-git_diff'

[[plugins]]
repo = 'Shougo/ddu-source-dummy'

[[plugins]]
repo = 'uga-rosa/ddc-source-vsnip'
