[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
lazy = 1
on_cmd = ['GhostStart']
repo = 'gamoutatsumi/dps-ghosttext.vim'

[[plugins]]
repo = 'lambdalisue/guise.vim'
depends = ['denops.vim']

[[plugins]]
repo = 'lambdalisue/gin.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
lazy = 1
depends = ['denops.vim']
on_event = ['InsertEnter', 'CmdlineEnter']
hook_post_source = 'source ~/dotfiles/nvim/rc/config/ddc.rc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-cmdline'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-around'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/ddc-buffer'
lazy = 1
on_source = ['ddc.vim']

# [[plugins]]
# repo = 'matsui54/ddc-matcher_fuzzy'
# lazy = 1
# on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'vim-skk/denops-skkeleton.vim'
hook_post_source = '''
call skkeleton#config({
\ 'globalJisyo': expand('~/.skk/SKK-JISYO.L'),
\ 'userJisyo': expand('~/.skk/.skk-jisyo'),
\ 'completionRankFile': expand('~/.skk/.skkeleton_rank'),
\ 'eggLikeNewline': v:true,
\ 'registerConvertResult': v:true,
\ 'showCandidatesCount': 3,
\ 'immediatelyCancel': v:false,
\ 'keepState': v:false,
\})

" inoremap <expr> <C-o> skkeleton#is_enabled() ? <SID>skk_c_o() : "\<C-o>"
" let key = nvim_replace_termcodes("<C-o>", v:true, v:false, v:true)
" function! s:skk_c_o() abort
" if skkeleton#is_enabled()
"     let key = nvim_replace_termcodes("<C-o>", v:true, v:false, v:true)
"     call nvim_feedkeys(key, 'n', v:false)
" endif
" endfunction

call skkeleton#register_kanatable('rom', {
\ '\<C-w>': 'deleteChar',
\ "z\<Space>": ["\u3000", ''],
\ 'va': ['ゔぁ', ''],
\ 'vi': ['ゔぃ', ''],
\ 'vu': ['ゔ', ''],
\ 've': ['ゔぇ', ''],
\ 'vo': ['ゔぉ', ''],
\ 'ca': ['か', ''],
\ 'ci': ['し', ''],
\ 'cu': ['く', ''],
\ 'ce': ['せ', ''],
\ 'co': ['こ', ''],
\ 'xn': ['ん', ''],
\ 'zk': ['→', ''],
\ 'zn': ['〓', ''],
\ 'zb': ['■', ''],
\ 'zm': ['●', ''],
\ 'zss': ['▼', ''],
\ 'zsu': ['▲', ''],
\ 'zha': ['☆', ''],
\ 'zv': ['★', ''],
\ 'zx': ['○', ''],
\ 'zds': ['◇', ''],
\ 'zdk': ['◆', ''],
\ 'z1': ['１', ''],
\ 'z2': ['２', ''],
\ 'z3': ['３', ''],
\ 'z4': ['４', ''],
\ 'z5': ['５', ''],
\ 'z6': ['６', ''],
\ 'z7': ['７', ''],
\ 'z8': ['８', ''],
\ 'z9': ['９', ''],
\ 'z0': ['０', ''],
\ 'zz0': ['⓪ ', ''],
\ 'zz1': ['①', ''],
\ 'zz2': ['②', ''],
\ 'zz3': ['③', ''],
\ 'zz4': ['④', ''],
\ 'zz5': ['⑤', ''],
\ 'zz6': ['⑥', ''],
\ 'zz7': ['⑦', ''],
\ 'zz8': ['⑧', ''],
\ 'zz9': ['⑨', ''],
\ 'z-': ['-', ''],
\ '(': ['（', ''],
\ ')': ['）', ''],
\ 'z(': ['(', ''],
\ 'z)': [')', ''],
\ 'z{': ['【', ''],
\ 'z}': ['】', ''],
\ '{': ['［', ''],
\ '}': ['］', ''],
\ 'z%': ['％', ''],
\ 'z.': ['…', ''],
\ '~': ['〜', ''],
\ 'z/': ['・', ''],
\ 'z,': ['●', ''],
\ })
imap <C-j> <Plug>(skkeleton-toggle)
cmap <C-j> <Plug>(skkeleton-enable)
autocmd vimrc User skkeleton-enable-post call s:highlight_imesign_on()
autocmd vimrc User skkeleton-disable-post call s:highlight_imesign_off()

call skkeleton#register_keymap('input', ';', 'henkanPoint')

function! s:highlight_imesign_off()
if mode() is# 'c' | return | endif
call sign_place( 10,'Ins','InInsert','%',{'lnum':line('.')} )
endfunction

function! s:insert_highlight() abort
call sign_unplace('Ins')
if &l:iminsert
call sign_place( 15,'Ins','InEskkKana','%',{'lnum':line('.')} )
else
call sign_place( 10,'Ins','InInsert','%',{'lnum':line('.')} )
endif
endfunction

let s:insertpos = 0

au vimrc InsertEnter * let s:insertpos = line('.') | call s:insert_highlight()
au vimrc CursorMovedI * if s:insertpos != line('.') | call s:insert_highlight() | let s:insertpos = line('.') | endif

if has('nvim')
au vimrc InsertLeavePre * call sign_unplace('Ins')
else
au vimrc InsertLeave * call sign_unplace('Ins')
endif
au vimrc InsertLeavePre * setlocal iminsert=0
au vimrc CmdlineLeave * setlocal iminsert=0

highlight eskkCursor guibg=#e2a478
function! s:highlight_imesign_on()
if mode() is# 'c' | return | endif
call sign_place( 15,'Ins','InEskkKana','%',{'lnum':line('.')} )
endfunction
let s:insert_icon = '▶'
hi InInsertSign gui=bold guifg=#84a0c6
hi InEskkKanaSign gui=bold guifg=#e2a478
call sign_define('InInsert',{'text':s:insert_icon,'texthl':'InInsertSign' ,'priority': 50 })
call sign_define('InEskkKana',{'text':s:insert_icon,'texthl':'InEskkKanaSign', 'priority': 50 })
call sign_define('InEskkKat',{'text':s:insert_icon,'texthl':"Constant" ,'priority': 51 })
'''

[[plugins]]
repo = 'LumaKernel/ddc-file'
lazy = 1
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-ui-pum'

[[plugins]]
repo = 'Shougo/ddc-ui-native'

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_length'
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'
#on_source = ['ddc.vim']

# [[plugins]]
# repo = 'matsui54/denops-signature_help'
# #on_source = ['ddc.vim']
# depends = ['denops.vim']
# hook_source = '''
# call signature_help#enable()
# '''

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_post_source = 'source ~/dotfiles/nvim/rc/config/ddu.rc.vim'
[[plugins]]
repo = 'Shougo/ddu-commands.vim'
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
[[plugins]]
repo = 'Shougo/ddu-source-file'
[[plugins]]
repo = 'Shougo/ddu-source-file_point'
[[plugins]]
repo = 'Shougo/ddu-source-file_old'
[[plugins]]
repo = 'Shougo/ddu-source-line'
[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
[[plugins]]
repo = 'Shougo/ddu-kind-file'
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
[[plugins]]
repo = 'Shougo/ddu-kind-word'
[[plugins]]
repo ='shun/ddu-source-buffer'
[[plugins]]
repo ='kuuote/ddu-source-mr'
[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
[[plugins]]
repo = 'matsui54/ddu-source-file_external'
[[plugins]]
repo = 'matsui54/ddu-source-help'
[[plugins]]
repo = 'gamoutatsumi/ddu-source-nvim-lsp'
[[plugins]]
repo = 'shun/ddu-source-rg'
[[plugins]]
repo = 'Shougo/ddu-source-action'
[[plugins]]
repo = 'kuuote/ddu-matcher-fuse'
[[plugins]]
repo = 'matsui54/ddu-filter-fzy'
[[plugins]]
repo = 'Bakudankun/ddu-source-dirmark'
[[plugins]]
repo = 'nekowasabi/ddu-filter-matcher_migemo'
[[plugins]]
repo = 'matsui54/ddc-postfilter_score'
[[plugins]]
repo = 'matsui54/ddu-source-dein_update'
[[plugins]]
repo = 'tani/glance-vim'
hook_add = '''
let g:glance#plugins = ['https://esm.sh/markdown-it-checkbox']
let g:markdown_fenced_languages = [
    \ 'bash=sh', 'javascript', 'js=javascript', 'json=javascript', 'typescript',
    \ 'ts=typescript', 'php', 'html', 'css', 'rust', 'sql', 'lua']
'''
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_hidden'
[[plugins]]
repo = 'Shougo/ddu-ui-filer'
[[plugins]]
repo = 'Bakudankun/ddu-filter-matchfuzzy'
[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'
[[plugins]]
repo = 'Shougo/ddu-column-filename'
[[plugins]]
repo = 'Shougo/ddu-source-vim'
[[plugins]]
repo = 'k-ota106/ddu-source-marks'
[[plugins]]
repo = 'matsui54/denops-signature_help'
[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
[[plugins]]
repo = 'tani/ddc-fuzzy'
[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'
[[plugins]]
repo = 'mikanIchinose/ddu-source-markdown'
[[plugins]]
repo = 'Milly/ddc-source-register'
# [[plugins]]
# if = 'executable("gh")'
# repo = 'skanehira/denops-gh.vim'
