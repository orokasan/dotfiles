[[plugins]]
#repo =  'iyuuya/denite-ale'
repo =  'orokasan/denite-ale'

[[plugins]]
repo =  'morhetz/gruvbox'
hook_add = ''' " {{{
let g:gruvbox_contrast_dark = 'medium'
let g:gruvbox_italicize_comments = 0
let g:gruvbox_invert_selection = 0
let g:gruvbox_guisp_fallback = 'bg'
''' # }}}

 [[plugins]]
 repo =  'Shougo/neomru.vim'
 hook_add =''' " {{{
 "denite-neomruでginaを無視
 let g:neomru#do_validate = 1
 "let g:neomru#file_mru_ignore_pattern = 
 "      \'\~$\|\.\%(o\|exe\|dll\|bak\|zwc\|pyc\|sw[po]\)$'.
 "      \'\|\%(^\|/\)\.\%(hg\|git\|bzr\|svn\)\%($\|/\)'.
 "      \'\|^\%(\\\\\|/mnt/\|/media/\|/temp/\|/tmp/\|\%(/private\)\=/var/folders/\)'.
 "      \'\|\%(^\%(gina\)://\)'.
 "      \'\|\%(^\%(term\)://\)'
 let g:neomru#file_mru_ignore_pattern = 'term://'
 let g:neomru#time_format = '%m/%d %H:%M'
 let g:neomru#file_mru_limit = 100
 let g:neomru#file_mru_path= '~/.cache/neomru/file'
 ''' # }}}

 [[plugins]]
 repo = 'vim-airline/vim-airline'

 [[plugins]]
 repo = 'sheerun/vim-polyglot'
 hook_add = '''
 let g:polyglot_disabled = ['markdown', 'tsx', 'typescript', 'csv']
 '''

[[plugins]]
repo =  'kshenoy/vim-signature' {{{
hook_add = '''
let g:SignatureMap = {
    \ 'Leader'             :  "M",
    \ 'PlaceNextMark'      :  "M,",
    \ 'ToggleMarkAtLine'   :  "M.",
    \ 'PurgeMarksAtLine'   :  "M-",
    \ 'DeleteMark'         :  "dM",
    \ 'PurgeMarks'         :  "M<Space>",
    \ 'PurgeMarkers'       :  "M<BS>",
    \ 'GotoNextLineAlpha'  :  "']",
    \ 'GotoPrevLineAlpha'  :  "'[",
    \ 'GotoNextSpotAlpha'  :  "`]",
    \ 'GotoPrevSpotAlpha'  :  "`[",
    \ 'GotoNextLineByPos'  :  "]'",
    \ 'GotoPrevLineByPos'  :  "['",
    \ 'GotoNextSpotByPos'  :  "]`",
    \ 'GotoPrevSpotByPos'  :  "[`",
    \ 'GotoNextMarker'     :  "]-",
    \ 'GotoPrevMarker'     :  "[-",
    \ 'GotoNextMarkerAny'  :  "]=",
    \ 'GotoPrevMarkerAny'  :  "[=",
    \ 'ListBufferMarks'    :  "M/",
    \ 'ListBufferMarkers'  :  "M?"
\ }

''' }}}


 [[plugins]]
 repo =  'w0ng/vim-hybrid'

 [[plugins]]
 repo = 'moznion/hateblo.vim'
 depends = 'webapi-vim'

 [[plugins]]
 repo = 'Shougo/unite-outline'


 [[plugins]]
 repo = 'junegunn/fzf.vim'
 hook_add = '''
 set runtimepath+=/usr/local/opt/fzf/
 '''

 [[plugins]]
 repo = 'mhinz/vim-startify'
 on_if = '!has("nvim")'
 hook_add = ''' " {{{
 let g:startify_files_number = 5
 let g:startify_list_order = [
         \ ['♻  Most Recently Used Files :'],
         \ 'files',
         \ ['♲  MRU in current directory :'],
         \ 'dir',
         \ ['⚑  Sessions :'],
         \ 'sessions',
         \ ['☺  Bookmark :'],
         \ 'bookmarks',
         \ ['Commands :'],
         \ 'commands'
         \ ]
 let g:startify_bookmarks = ["~/dotfiles/_vimrc", "~/dotfiles/dein.toml", "~/dotfiles/dein_lazy.toml"]
 let g:startify_commands = [
     \ {'di': ['DeinInstall', 'DeinInstall']},
     \ {'du': ['DeinUpdate', 'DeinUpdate']},
     \ {'dr': ['DeinRecache', 'DeinRecache']}
     \ ]

     let g:ascii = [
           \ '        __',
           \ '.--.--.|__|.--------.',
           \ '|  |  ||  ||        |',
           \ ' \___/ |__||__|__|__|',
           \ ''
           \]
 let g:startify_custom_header = g:ascii
 " autocmd User Startified for key in ['b','s','t','v'] |
 "           \ execute 'nunmap <buffer>' key | endfor
 ''' # }}}

[[plugins]]
on_if ='has("nvim")'
repo = 'ncm2/float-preview.nvim'
hook_add = '''
let g:float_preview#docked = 0
let g:float_preview#max_height = 5
'''

 [[plugins]]
 repo = 'voldikss/vim-floaterm'
 hook_add = '''
 '''

[[plugins]]
#repo =  'dense-analysis/ale'
repo =  'orokasan/ale'
on_event = 'InsertLeave'
hook_source ='''
"https://efcl.info/2015/09/10/introduce-textlint/
"https://koirand.github.io/blog/2018/textlint/
"vint: pip install --pre vim-vint
"preset-ja-technical-writing
"npm install textlint-rule-preset-ja-technical-writing@beta
let g:ale_echo_delay = 400
let g:ale_textlint_change_directory = 1
let g:ale_disable_lsp = 1
let g:ale_use_global_executables=1
let g:ale_set_balloons =0
let g:ale_linters = {
    \ 'markdown': ['textlint'],
    \ 'pandoc' : ['textlint'],
    \ 'vim':['vint'],
    \ 'python': [''],
    \ 'go': [''],
    \ 'text':['textlint']
    \ }
let g:ale_echo_msg_format = '%code: %%s [%linter%]'
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_textlint_options = '.textlintrc'
let g:ale_sign_column_always = 1
let g:ale_lint_delay = 5000
let g:ale_lint_on_enter = 0
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_filetype_changed = 0
let g:ale_open_list = 0
let g:ale_keep_list_window_open = 0
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
if has('mac')
    let g:ale_sign_error = ''
    let g:ale_sign_warning = ''
    let g:ale_statusline_format = ['%d', '%d', '']
else
    let g:ale_sign_error = ''
    let g:ale_sign_warning = ''
    let g:ale_statusline_format = ['%d', '%d', '']
endif
'''

[[plugins]]
repo ='plasticboy/vim-markdown'
on_ft = ['markdown','md']
hook_add = '''
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_new_list_item_indent = 4
let g:vim_markdown_foldint_level = 0
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
hook_add = '''
let g:jedi#auto_vim_configuration = 0
'''

[[plugins]]
repo = 'deoplete-plugins/deoplete-jedi'
on_event = 'InsertEnter'
hook_add = '''
let g:deoplete#sources#jedi#statement_length = 30
let g:deoplete#sources#jedi#show_docstring = 1
'''

[[plugins]]
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = '''
let g:fruzzy#usenative = 1
let g:fruzzy#sortonempty = 1
'''
hook_post_update = 'call fruzzy#install()'

[[plugins]]
repo =  'maximbaz/lightline-ale'
depends = ['lightline.vim']
hook_add = '''
if has('mac')
    let g:lightline#ale#indicator_checking = "\uf110"
    let g:lightline#ale#indicator_warnings = ''
    let g:lightline#ale#indicator_errors = ''
    let g:lightline#ale#indicator_ok = ""
else
    let g:lightline#ale#indicator_checking = "\uf110"
    let g:lightline#ale#indicator_warnings = "\uf48f"
    let g:lightline#ale#indicator_errors = "\uf484"
    let g:lightline#ale#indicator_ok = "\uf43a"
endif


[[plugins]]
repo =  'Shougo/neocomplete.vim'
on_if = '!has("nvim")'
on_event = 'InsertEnter'

''' # }}}
