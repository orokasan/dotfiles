[[plugins]]
repo = 'Shougo/ddc.vim'
lazy = 1
depends = ['context_filetype.vim', 'denops.vim']
on_event = 'InsertEnter'
hook_source = '''
au User DenopsPluginPre:ddc echo 'ddc is loading...'
au User DenopsPluginPost:ddc echo 'ddc has been loaded!'
" <TAB>: completion.
inoremap <silent><expr> <TAB>
\ pumvisible() ? "\<C-n>" :
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
\ "\<TAB>" : ddc#manual_complete()
" Use around source.
" https://github.com/Shougo/ddc-around
" Use matcher_head and sorter_rank.
" https://github.com/Shougo/ddc-matcher_head
" https://github.com/Shougo/ddc-sorter_rank
call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'matchers': ['matcher_fuzzy'],
      \   'sorters': ['sorter_rank']},
      \   'converters': ['converter_remove_overlap'],
      \ 'skkeleton': {'mark': 'skk', 'matchers': ['skkeleton'], 'sorters': []},
      \ 'nvim-lsp': {'mark': 'lsp', 'forceCompletionPattern': '\.|:|->'},
      \ })

    call ddc#custom#patch_global({
    \ 'smartCase': v:true,
    \ })
" Change source options

call ddc#custom#patch_global('sourceOptions', {
      \ 'around': {'mark': 'A'},
      \ 'buffer': {'mark': 'B'},
      \ })

call ddc#custom#patch_global('sourceParams', {
    \ 'buffer': {'requireSameFiletype': v:false,
            \ 'fromAltBuf': v:true},
    \ })
call ddc#custom#patch_global('sourceParams', {
      \ 'around': {'maxSize': 500},
      \ })
" Customize settings on a filetype
call ddc#custom#patch_global('sources', ['nvim-lsp','around','buffer','skkeleton','file'])
if dein#tap('pum.vim')
call ddc#custom#patch_global({
\ 'completionMenu': 'pum.vim',
\ })
call ddc#custom#patch_global('sourceOptions', {
  \   '_': {
  \     'matchers': ['matcher_fuzzy'],
  \     'sorters': ['sorter_fuzzy'],
  \     'converters': ['converter_fuzzy']
  \   }
  \ })
endif
	"inoremap <silent><expr> <C-p>
	"\ pumvisible() ? '<C-p>' : ddc#manual_complete()
inoremap <silent><expr> <C-h> <SID>ddc_smart_close_popup()."\<C-h>"
inoremap <silent><expr> <BS> <SID>ddc_smart_close_popup()."\<BS>"
function! s:ddc_smart_close_popup() abort
  return pumvisible() ? "\<C-e>" : ''
endfunction

call ddc#custom#patch_global('sourceOptions', {
    \ 'file': {
    \   'mark': 'F',
    \   'isVolatile': v:true,
    \   'forceCompletionPattern': '\S/\S*',
    \ }})
call ddc#custom#patch_filetype(
    \ ['ps1', 'dosbatch', 'autohotkey', 'registry'], {
    \ 'sourceOptions': {
    \   'file': {
    \     'forceCompletionPattern': '\S\\\S*',
    \   },
    \ },
    \ 'sourceParams': {
    \   'file': {
    \     'mode': 'win32',
    \   },
    \ }})
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/ddc-matcher_fuzzy'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = ['ddc.vim']
# [[plugins]]
# repo =  'Shougo/deoplete.nvim'
# # on_if = 'has("nvim")'
# on_event = 'InsertEnter'
# hook_source = 'source ~/dotfiles/nvim/rc/config/deoplete.rc.vim'
[[plugins]]
repo = 'Shougo/deoppet.nvim'
on_source = ['ddc.vim']

[[plugins]]
repo = 'kuuote/denops-skkeleton.vim'
# repo = 'orokasan/denops-skkeleton.vim'
lazy = 1
on_event = ['InsertEnter','CmdlineEnter']
depends = ['denops.vim']
hook_source = '''
call skkeleton#config({
    \ 'globalJisyo': expand('~/.skk/SKK-JISYO.L'),
    \ 'userJisyo': expand('~/.skk/.skk-jisyo'),
    \ 'eggLikeNewline': v:true,
    \ 'registerConvertResult': v:true,
    \ 'showCandidatesCount': 3,
    \ 'immediatelyCancel': v:true,
    \})

call skkeleton#register_kanatable('rom', {
       \ "z\<Space>": ["\u3000", ''],
	\ 'va': ['ゔぁ', ''],
	\ 'vi': ['ゔぃ', ''],
	\ 'vu': ['ゔ', ''],
	\ 've': ['ゔぇ', ''],
	\ 'vo': ['ゔぉ', ''],
	\ 'ca': ['か', ''],
	\ 'ci': ['し', ''],
	\ 'cu': ['く', ''],
	\ 'ce': ['せ', ''],
	\ 'co': ['こ', ''],
	\ 'xn': ['ん', ''],
	\ '~': ['〜', ''],
	\ 'zk': ['■', ''],
	\ 'zm': ['●', ''],
	\ 'zss': ['▼', ''],
	\ 'zsu': ['▲', ''],
	\ 'zds': ['◇', ''],
	\ 'zdk': ['◆', ''],
	\ 'z1': ['１', ''],
	\ 'z2': ['２', ''],
	\ 'z3': ['３', ''],
	\ 'z4': ['４', ''],
	\ 'z5': ['５', ''],
	\ 'z6': ['６', ''],
	\ 'z7': ['７', ''],
	\ 'z8': ['８', ''],
	\ 'z9': ['９', ''],
	\ 'z-': ['-', ''],
	\ 'z(': ['（', ''],
	\ 'z)': ['）', ''],
	\ 'zz{': ['【', ''],
	\ 'zz}': ['】', ''],
	\ 'z%': ['％', ''],
	\ 'z.': ['…', ''],
	\ 'z/': ['・', ''],
	\ 'z,': ['●', ''],
      \ })
'''

[[plugins]]
repo = 'LumaKernel/ddc-file'

# [[plugins]]
# repo = 'Shougo/pum.vim'
# hook_add = '''
# inoremap <Tab>   <Cmd>call pum#map#insert_relative(+1)<CR>
# inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
# inoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
# inoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
# inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
# inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
# inoremap <PageDown> <Cmd>call pum#map#insert_relative_page(+1)<CR>
# inoremap <PageUp>   <Cmd>call pum#map#insert_relative_page(-1)<CR>
# '''

[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = ['ddc.vim']
